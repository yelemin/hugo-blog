[{"content":"**\nP-R曲线 ** 解释：P为查准率(precision)，表示真正例数占预测正例数的比例。 R为召回率(recall)，表示真正例数占实际正例数的比例。 根据分类结果建立混淆矩阵，如下图所示 进一步定义，查准率P=TP/(TP+FP)，查全率R=TP/(TP+FN)\n由西瓜书关于P-R曲线的描述：根据学习器的预测为正例的概率对样例进行排序，排在前边的样本更有可能为正例，然后按此顺序逐个将样本作为正例进行预测，计算出每次的查全率、查准率，最终作出P-R曲线图。\nCode： 法一，可自行模拟上诉过程\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 import numpy as np from matplotlib.font_manager import FontProperties import matplotlib.pyplot as plt #0-坏瓜 1-好瓜 Data=np.round(np.random.uniform(0,1,1000)).tolist() Probability=np.random.uniform(0,1,1000).tolist() 西瓜=list(zip(Data, Probability)) 西瓜=sorted(西瓜,key=lambda x:x[1],reverse=True) P=[] R=[] TPR=[] FPR=[] FNR=[] for 好瓜 in range(1,1000): TP = 0 FP=0 TN=0 FN = 0 for idx in range(0,好瓜): if 西瓜[idx][0] == 1: TP=TP+1 else: FP=FP+1 for idx in range(好瓜,1000): if 西瓜[idx][0]==0: TN = TN + 1 else: FN=FN+1 P.append(TP/(TP+FP) if TP+FP!=0 else TP/(TP+FP+1)) R.append(TP/(TP+FN) if TP+FN!=0 else TP/(TP+FN+1)) TPR.append(TP/(TP+FN) if TP+FN!=0 else TP/(TP+FN+1)) FPR.append(FP/(TN+FP) if TN+FP!=0 else FP/(TN+FP+1)) FNR.append(1-TPR[-1]) font = FontProperties(fname=r\u0026#34;c:\\windows\\fonts\\simsun.ttc\u0026#34;, size=14) plt.xlabel(\u0026#34;查全率\u0026#34;, fontproperties=font) plt.ylabel(\u0026#34;查准率\u0026#34;, fontproperties=font) plt.title(\u0026#39;P-R曲线\u0026#39;, fontproperties=font) plt.plot(R,P) f1=np.polyfit(R,P,4) #使用4次多项式拟合P-R曲线 predict_P=np.polyval(f1,R) plt.plot(R,predict_P) plt.show() 法二，使用scikit库函数直接求得P，R值\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np from matplotlib.font_manager import FontProperties import matplotlib.pyplot as plt from sklearn.metrics import precision_recall_curve, roc_curve, auc Data=np.round(np.random.uniform(0,1,1000)).tolist() Probability=np.random.uniform(0,1,1000).tolist() P,R, thresholds = precision_recall_curve(Data, Probability) font = FontProperties(fname=r\u0026#34;c:\\windows\\fonts\\simsun.ttc\u0026#34;, size=14) plt.xlabel(\u0026#34;查全率\u0026#34;, fontproperties=font) plt.ylabel(\u0026#34;查准率\u0026#34;, fontproperties=font) plt.title(\u0026#39;P-R曲线\u0026#39;, fontproperties=font) plt.plot(R,P) f1=np.polyfit(R,P,4) predict_P=np.polyval(f1,R) plt.plot(R,predict_P) plt.show() **\nROC曲线与AUC ** 解释：中文全称为受试者工作特征，同P-R曲线相似，衡纵坐标涉及假真例率FPR和真正例率TPR。AUC为ROC曲线下的面积。 两者分别定义为FPR=TP/(TP+FN)，FPR=FP/(TN+FP)。 绘制方法与P-R曲线类似，就此略过。AUC可通过scikit库函数直接求得或者利用以下公式求梯形和得到面积： $$ AUC=\\frac 1 2 \\sum_{\\mathclap{1\\le i\\le m-1}} (x_{i+1}-x_{i})·(y_{i+1}+y_{i}) $$\nCode： 法一，可自行模拟上诉过程\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 import numpy as np from matplotlib.font_manager import FontProperties import matplotlib.pyplot as plt #0-坏瓜 1-好瓜 Data=np.round(np.random.uniform(0,1,1000)).tolist() Probability=np.random.uniform(0,1,1000).tolist() 西瓜=list(zip(Data, Probability)) 西瓜=sorted(西瓜,key=lambda x:x[1],reverse=True) P=[] R=[] TPR=[] FPR=[] FNR=[] for 好瓜 in range(1,1000): TP = 0 FP=0 TN=0 FN = 0 for idx in range(0,好瓜): if 西瓜[idx][0] == 1: TP=TP+1 else: FP=FP+1 for idx in range(好瓜,1000): if 西瓜[idx][0]==0: TN = TN + 1 else: FN=FN+1 P.append(TP/(TP+FP) if TP+FP!=0 else TP/(TP+FP+1)) R.append(TP/(TP+FN) if TP+FN!=0 else TP/(TP+FN+1)) TPR.append(TP/(TP+FN) if TP+FN!=0 else TP/(TP+FN+1)) FPR.append(FP/(TN+FP) if TN+FP!=0 else FP/(TN+FP+1)) FNR.append(1-TPR[-1]) font = FontProperties(fname=r\u0026#34;c:\\windows\\fonts\\simsun.ttc\u0026#34;, size=14) plt.xlabel(\u0026#34;假正例率\u0026#34;, fontproperties=font) plt.ylabel(\u0026#34;真正例率\u0026#34;, fontproperties=font) plt.title(\u0026#39;ROC曲线\u0026#39;, fontproperties=font) plt.plot(FPR,TPR) f2=np.polyfit(FPR,TPR,4) predict_TPR=np.polyval(f2,FPR) plt.plot(FPR,predict_TPR) plt.show() AUC2=0 for idx in range(1,len(FPR)): AUC2=AUC2+(FPR[idx]-FPR[idx-1])*(TPR[idx]+TPR[idx-1])/2 print(\u0026#34;公式计算的AUC=\u0026#34;,AUC2) 法二，使用scikit库函数直接求得TPR，FPR值\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import numpy as np from matplotlib.font_manager import FontProperties import matplotlib.pyplot as plt from sklearn.metrics import precision_recall_curve, roc_curve, auc Data=np.round(np.random.uniform(0,1,1000)).tolist() Probability=np.random.uniform(0,1,1000).tolist() P,R, thresholds = precision_recall_curve(Data, Probability) font = FontProperties(fname=r\u0026#34;c:\\windows\\fonts\\simsun.ttc\u0026#34;, size=14) FPR,TPR, thresholds = roc_curve(Data, Probability) plt.xlabel(\u0026#34;假正例率\u0026#34;, fontproperties=font) plt.ylabel(\u0026#34;真正例率\u0026#34;, fontproperties=font) plt.title(\u0026#39;ROC曲线\u0026#39;, fontproperties=font) plt.plot(FPR,TPR) f2=np.polyfit(FPR,TPR,4) predict_TPR=np.polyval(f2,FPR) plt.plot(FPR,predict_TPR) plt.show() AUC = auc(FPR,TPR) print(\u0026#34;scikit库计算的AUC=\u0026#34;,AUC) **\n代价(CC)曲线 ** 解释：对于第i类样本预测为第j类样本的代价cost(i,j)，其中图中的横坐标为正例率代价，纵坐标为[0,1]范围内的归一化代价\n根据分类结果建立混淆矩阵，如下图所示 对横纵坐标分别定义得到正例率代价P(+)cost=(p·cost(0,1))/(p·cost(0,1)+(1-p)·cost(1,0))，归一化代价cost(norm)=(FNR·p·cost(0,1)+FPR·(1-p)·cost(1,0))/(p·cost(0,1)+(1-p)·cost(1,0))，其中p为样例为正例的概率\n可自行模拟上诉过程绘制代价曲线图，第一种方法是n条经$$(0,FPR_{i})，(1,FNR_{i})$$两点的直线所交得的y值最小曲线，第二种方法是根据定义模拟拟合代价曲线，横轴为取值为[0,1]的正例率概率代价： $$P(+)cost=\\frac {p·cost_{01}} {p·cost_{01}+(1-p)·cost_{10}}$$， 纵坐标为取值为[0,1]的归一化代价： $$cost_{norm}=FNR·P(+)cost+FPR·(1-P(+)cost)=\\frac {FNR·p·cost_{01}+FPR·(1-p)·cost_{10}} {p·cost_{01}+(1-p)·cost_{10}}$$；代价曲线围成的面积同上诉AUC的求法，计算梯形和的面积表示曲线下的面积： $$ 期望总体代价=\\frac 1 2 \\sum_{\\mathclap{1\\le i\\le m-1}} (x_{i+1}-x_{i})·(y_{i+1}+y_{i}) $$ 最终得到如下效果图： Code： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 import numpy as np from matplotlib.font_manager import FontProperties import matplotlib.pyplot as plt #0-坏瓜 1-好瓜 Data=np.round(np.random.uniform(0,1,1000)).tolist() Probability=np.random.uniform(0,1,1000).tolist() 西瓜=list(zip(Data, Probability)) 西瓜=sorted(西瓜,key=lambda x:x[1],reverse=True) P=[] R=[] TPR=[] FPR=[] FNR=[] for 好瓜 in range(1,1000): TP = 0 FP=0 TN=0 FN = 0 for idx in range(0,好瓜): if 西瓜[idx][0] == 1: TP=TP+1 else: FP=FP+1 for idx in range(好瓜,1000): if 西瓜[idx][0]==0: TN = TN + 1 else: FN=FN+1 P.append(TP/(TP+FP) if TP+FP!=0 else TP/(TP+FP+1)) R.append(TP/(TP+FN) if TP+FN!=0 else TP/(TP+FN+1)) TPR.append(TP/(TP+FN) if TP+FN!=0 else TP/(TP+FN+1)) FPR.append(FP/(TN+FP) if TN+FP!=0 else FP/(TN+FP+1)) FNR.append(1-TPR[-1]) font = FontProperties(fname=r\u0026#34;c:\\windows\\fonts\\simsun.ttc\u0026#34;, size=14) plt.xlabel(\u0026#39;正例率代价\u0026#39;, fontproperties=font) plt.ylabel(\u0026#39;归一化代价\u0026#39;, fontproperties=font) plt.title(\u0026#39;代价曲线与期望总体代价\u0026#39;, fontproperties=font) for idx in range(len(FNR)): k=(FNR[idx]-FPR[idx])/(1-0) b=FPR[idx] x=np.arange(0,1.1,0.1) y=k*x+b plt.plot(x,y,color=\u0026#39;blue\u0026#39;) pCost=[] costNorm=[] for x in np.arange(0,1,0.01): pCost.append(x) ymin=1 for idx in range(len(FNR)): ymin=min(ymin,FNR[idx]*x+FPR[idx]*(1-x)) costNorm.append(ymin) plt.plot(pCost,costNorm,color=\u0026#39;red\u0026#39;) plt.show() 期望总体代价=0 for idx in range(1,len(pCost)): 期望总体代价=期望总体代价+(pCost[idx]-pCost[idx-1])*(costNorm[idx]+costNorm[idx-1])/2 print(\u0026#39;期望总体代价=\u0026#39;,期望总体代价) 补充 上述过程使用随机算法进行分类，故所绘制的曲线与书本中的情形有些许差距。为检验算法实现的正确性，可设置分类器全部预测正确的情况，即当概率为0~0.5区间时预测为坏瓜否则为好瓜，判断最终的曲线是否为直角线段即可。\n","date":"2024-03-17T00:00:00Z","image":"https://cos-1-1304819371.cos.ap-beijing.myqcloud.com/pic-go/WeChat735b0c9bb69b5ba653e29a813f6053dc.png?imageSlim","permalink":"http://localhost:1313/p/2315/","title":"P-R曲线、ROC曲线、AUC及代价(CC)曲线5"},{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"http://localhost:1313/p/hello-world/cover_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/p/hello-world/","title":"Hello World"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"http://localhost:1313/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"http://localhost:1313/p/image-gallery/2_hubce42636ecacc1a380b462f3110efcec_37455_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/p/image-gallery/","title":"Image gallery"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"http://localhost:1313/p/shortcodes/cover_huec3c3e34981507583e214021ad1b9a4b_12942_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/p/shortcodes/","title":"Shortcodes"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi),e^{2 \\pi i \\xi x},d\\xi $$\n1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"http://localhost:1313/p/math-typesetting/","title":"Math Typesetting"}]